#! /bin/sh
set -e
set -x

datapath="/data"
binpath="/install/bin"
resultpath="${datapath}/results"
outpath="${datapath}/out"
iterations=20

# Clean results folder
mkdir -p "${resultpath}"
mkdir -p "${outpath}"
rm "${resultpath}"/* || echo "No results"
rm "${outpath}"/* || echo "No output"

for test in bbbc mitocheck tubhiswt; do
    input=unknown
    case "$test" in
        bbbc)
            input=${datapath}/BBBC/NIRHTa-001.ome.tiff
            inputglob=${datapath}/BBBC/NIRHTa-001.ome.tiff
        ;;
        mitocheck)
            input=${datapath}/mitocheck/00001_01.ome.tiff
            inputglob=${datapath}/mitocheck/00001_01.ome.tiff
        ;;
        tubhiswt)
            input=${datapath}/tubhiswt-4D/tubhiswt_C0_TP0.ome.tif
            input=${datapath}/tubhiswt-4D/*.tif
        ;;
    esac

    # Java tests
    (
        scripts/metadata-performance-java ${iterations} "$input" ${outpath}/${test}-java.ome.xml ${resultpath}/${test}-metadata-linux-java.tsv exec:java
        for i in $(seq ${iterations}); do
            scripts/metadata-performance-java 1 "$input" ${outpath}/${test}-java.ome.xml ${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
        done

        scripts/pixels-performance-java ${iterations} $inputglob ${outpath}/${test}-java.ome.tiff ${resultpath}/${test}-pixeldata-linux-java.tsv exec:java
        for i in $(seq ${iterations}); do
            scripts/pixels-performance-java 1 $inputglob ${outpath}/${test}-java.ome.tiff ${resultpath}/${test}-pixeldata-linux-java-${i}.tsv exec:java
        done

        scripts/ometiff-performance-java ${iterations} "$input" ${outpath}/${test}-java.ome.tiff ${resultpath}/${test}-ometiffdata-linux-java.tsv exec:java
        for i in $(seq ${iterations}); do
            scripts/ometiff-performance-java 1 "$input" ${outpath}/${test}-java.ome.tiff ${resultpath}/${test}-ometiffdata-linux-java-${i}.tsv exec:java
        done
    )

    # C++ tests
    (
        ${binpath}/metadata-performance ${iterations} "$input" ${outpath}/${test}-cpp.ome.xml ${resultpath}/${test}-metadata-linux-cpp.tsv
        for i in $(seq ${iterations}); do
            ${binpath}/metadata-performance 1 "$input" ${outpath}/${test}-cpp.ome.xml ${resultpath}/${test}-metadata-linux-cpp-${i}.tsv
        done

        ${binpath}/pixels-performance ${iterations} $inputglob ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-pixeldata-linux-cpp.tsv
        for i in $(seq ${iterations}); do
            ${binpath}/pixels-performance 1 $inputglob ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-pixeldata-linux-cpp-${i}.tsv
        done

        ${binpath}/ometiff-performance ${iterations} "$input" ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-ometiffdata-linux-cpp.tsv
        for i in $(seq ${iterations}); do
            ${binpath}/ometiff-performance 1 "$input" ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-ometiffdata-linux-cpp-${i}.tsv
        done
    )

    # JACE tests
    (
        cd $BF_JACE_HOME
        # Can throw boost: mutex exception
        ${binpath}/metadata-performance-jace ${iterations} "$input" ${outpath}/${test}-jace.ome.xml ${resultpath}/${test}-metadata-linux-jace.tsv || true
        for i in $(seq ${iterations}); do
            ${binpath}/metadata-performance-jace 1 "$input" ${outpath}/${test}-jace.ome.xml ${resultpath}/${test}-metadata-linux-jace-${i}.tsv || true
        done

        jace_iterations=${iterations}
        # NB: takes ~1h30 to complete
        if [ "$test" == "bbbc" ]; then
            jace_iterations=6
        fi
        ${binpath}/pixels-performance-jace ${jace_iterations} $inputglob ${outpath}/${test}-jace.ome.tiff ${resultpath}/${test}-pixeldata-linux-jace.tsv
        for i in $(seq ${jace_iterations}); do
            ${binpath}/pixels-performance-jace 1 $inputglob ${outpath}/${test}-jace.ome.tiff ${resultpath}/${test}-pixeldata-linux-jace-${i}.tsv
        done
        ${binpath}/ometiff-performance-jace ${jace_iterations} "$input" ${outpath}/${test}-jace.ome.tiff ${resultpath}/${test}-ometiffdata-linux-jace.tsv
        for i in $(seq ${jace_iterations}); do
            ${binpath}/ometiff-performance-jace 1 "$input" ${outpath}/${test}-jace.ome.tiff ${resultpath}/${test}-ometiffdata-linux-jace-${i}.tsv
        done
    )
done
