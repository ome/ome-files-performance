#! /bin/sh
set -e
set -x

datapath="/data"
binpath="/install/bin"
resultpath="${datapath}/results"
outpath="${datapath}/out"
iterations=1

# Clean results folder
mkdir -p "${resultpath}"
mkdir -p "${outpath}"
rm "${resultpath}"/* || echo "No results"
rm "${outpath}"/* || echo "No output"

for test in bbbc mitocheck tubhiswt; do
    input=unknown
    case "$test" in
        bbbc)
            input=${datapath}/BBBC/NIRHTa-001.ome.tiff
        ;;
        mitocheck)
            input=${datapath}/mitocheck/00001_01.ome.tiff
        ;;
        tubhiswt)
            input=${datapath}/tubhiswt-4D/tubhiswt_C0_TP0.ome.tif
        ;;
    esac

    # Java tests
    (
        mvn -P metadata -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
        for i in $(seq ${iterations}); do
            mvn -P metadata -Dtest.iterations=1 -Dtest.input="$input" -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
        done

        mvn -P pixels -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.output=${outpath}/${test}-java.ome.tiff -Dtest.results=${resultpath}/${test}-pixeldata-linux-java.tsv exec:java
        for i in $(seq ${iterations}); do
            mvn -P pixels -Dtest.iterations=1 -Dtest.input="$input" -Dtest.output=${outpath}/${test}-java.ome.tiff -Dtest.results=${resultpath}/${test}-pixeldata-linux-java-${i}.tsv exec:java
        done
    )

    # C++ tests
    (
        ${binpath}/metadata-performance ${iterations} "$input" ${outpath}/${test}-cpp.ome.xml ${resultpath}/${test}-metadata-linux-cpp.tsv
        for i in $(seq ${iterations}); do
            ${binpath}/metadata-performance 1 "$input" ${outpath}/${test}-cpp.ome.xml ${resultpath}/${test}-metadata-linux-cpp-${i}.tsv
        done

        ${binpath}/pixels-performance ${iterations} "$input" ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-pixeldata-linux-cpp.tsv
        for i in $(seq ${iterations}); do
            ${binpath}/pixels-performance 1 "$input" ${outpath}/${test}-cpp.ome.tiff ${resultpath}/${test}-pixeldata-linux-cpp-${i}.tsv
        done
    )
done

# Tiling Performance Tests
for test in neff-histopathology tubhiswt; do
    input=unknown
    case "$test" in
        neff-histopathology )
            input=${datapath}/ndpi/neff-histopathology/Bazla-14-100-brain - 2015-06-19 23.34.11.ndpi
            # Very Large
            #mvn -P tiling -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.tileXStart=122880 -Dtest.tileYStart=103424 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
            #for i in $(seq ${iterations}); do
                #mvn -P tiling -Dtest.iterations=1 -Dtest.input="$input" -Dtest.tileXStart=122880 -Dtest.tileYStart=103424 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
            #done
            # Large - Even divisions
            mvn -P tiling -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.tileXStart=30720 -Dtest.tileYStart=25856 -Dtest.series=1 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
            for i in $(seq ${iterations}); do
                mvn -P tiling -Dtest.iterations=1 -Dtest.input="$input" -Dtest.tileXStart=30720 -Dtest.tileYStart=25856 -Dtest.series=1 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
            done
            # Medium - Steady Increment
            mvn -P tiling -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.tileXStart=7680 -Dtest.tileYStart=6464 -Dtest.tileOperator="-" -Dtest.tileIncrement=64 -Dtest.series=2 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
            for i in $(seq ${iterations}); do
                mvn -P tiling -Dtest.iterations=1 -Dtest.input="$input" -Dtest.tileXStart=7680 -Dtest.tileYStart=6464 -Dtest.tileOperator="-" -Dtest.tileIncrement=64 -Dtest.series=2 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
            done
        ;;
        tubhiswt)
            input=${datapath}/tubhiswt-4D/tubhiswt_C0_TP0.ome.tif
            # Auto Tiling
            mvn -P tiling -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.tileXStart=512 -Dtest.tileYStart=512  -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
            for i in $(seq ${iterations}); do
                mvn -P tiling -Dtest.iterations=1 -Dtest.input="$input" -Dtest.tileXStart=512 -Dtest.tileYStart=512 -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
            done
            # Manual Tiling
             mvn -P tiling -Dtest.iterations=${iterations} -Dtest.input="$input" -Dtest.tileXStart=512 -Dtest.tileYStart=512 -Dtest.autoTile=false -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java.tsv exec:java
            for i in $(seq ${iterations}); do
                mvn -P tiling -Dtest.iterations=1 -Dtest.input="$input" -Dtest.tileXStart=512 -Dtest.tileYStart=512 -Dtest.autoTile=false -Dtest.output=${outpath}/${test}-java.ome.xml -Dtest.results=${resultpath}/${test}-metadata-linux-java-${i}.tsv exec:java
            done
        ;;
    esac
done